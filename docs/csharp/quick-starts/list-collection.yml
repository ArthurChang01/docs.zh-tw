documentType: Tutorial
title: "<span data-ttu-id=\"948eb-101\">C# 中的集合</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-101\">Collections in C#</span></span>"
metadata:
  title: "C# 中的集合。 了解如何在 C# 中使用序列和集合。"
  description: "在本教學課程中，您將使用瀏覽器以互動方式學習 C#。 您將會撰寫 C# 程式碼，並直接在瀏覽器中查看程式碼編譯和執行的結果。"
  audience: Developer
  ms.custom: mvc
  level: Beginner
  displayType: two-column
  interactive: csharp
items:
- durationInMinutes: 1
  content: "<span data-ttu-id=\"948eb-106\">本快速入門將教導您 C#，以互動方式使用您的瀏覽器，撰寫 C# 程式碼並查看編譯和執行您的程式碼的結果。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-106\">This quick start teaches you C# interactively, using your browser to write C# code and see the results of compiling and running your code.</span></span> <span data-ttu-id=\"948eb-107\">它包含一系列針對建立、修改及探索集合和陣列的課程。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-107\">It contains a series of lessons that create, modify and explore collections and arrays.</span></span>\n"
  ms.openlocfilehash: e00cf6badcbd39cc1e9320095169d86efb9cad8f
  ms.sourcegitcommit: 43c656811dd38a66a6672084c65d10c0cbbf2015
  ms.translationtype: HT
  ms.contentlocale: zh-TW
  ms.lasthandoff: 11/22/2017
- title: "<span data-ttu-id=\"948eb-108\">建立清單</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-108\">Create lists</span></span>"
  durationInMinutes: 2
  content: "<span data-ttu-id=\"948eb-109\">在互動式視窗中執行下列程式碼。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-109\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"948eb-110\">若要這樣做，請在互動式視窗中輸入下列程式碼區塊 (以您的名稱取代 \"<name>\")，然後按一下 [執行] 按鈕：</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-110\">To do that, type the following code block in the interactive window (replace \"<name>\" with your name) and click the **Run** button:</span></span>\n\n```csharp\nvar names = new List<string> { \"<name>\", \"Ana\", \"Felipe\" };\nforeach (var name in names)\n{\n  Console.WriteLine($\"Hello {name.ToUpper()}!\");\n}\n```\n\n<span data-ttu-id=\"948eb-111\">您剛才已建立字串清單，在該清單中新增三個名稱，並以全部大寫的形式列印出那些名稱。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-111\">You've just created a list of strings, added three names to that list, and printed out the names in all CAPS.</span></span> <span data-ttu-id=\"948eb-112\">您會使用從先前的快速入門中學習到的概念，來在清單中執行迴圈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-112\">You're using concepts that you've learned in earlier quick starts to loop through the list.</span></span>\n\n<span data-ttu-id=\"948eb-113\">顯示名稱的程式碼會運用**字串插值**。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-113\">The code to display names makes use of **interpolated strings**.</span></span>  <span data-ttu-id=\"948eb-114\">當您在 `string` 的前方放置 `$` 時，您可以在字串宣告中內嵌 C# 程式碼。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-114\">When you precede a `string` with the `$` character, you can embed C# code in the string declaration.</span></span> <span data-ttu-id=\"948eb-115\">實際的字串會以它所產生的值取代 C# 程式碼。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-115\">The actual string replaces that C# code with the value it generates.</span></span> <span data-ttu-id=\"948eb-116\">在此範例中，它會以每個 (轉換成大寫字母的) 名稱取代 `{name.ToUpper()}`，因為您呼叫了 <xref:System.String.ToUpper%2A> 方法。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-116\">In this example, it replaces the `{name.ToUpper()}` with each name, converted to capital letters, because you called the <xref:System.String.ToUpper%2A> method.</span></span>\n\n<span data-ttu-id=\"948eb-117\">讓我們繼續探索。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-117\">Let's keep exploring.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"948eb-118\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-118\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"948eb-119\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-119\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"948eb-120\">修改清單內容</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-120\">Modify list contents</span></span>"
  durationInMinutes: 3
  content: "<span data-ttu-id=\"948eb-121\">您所建立的集合會使用 <xref:System.Collections.Generic.List%601> 類型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-121\">The collection you created uses the <xref:System.Collections.Generic.List%601> type.</span></span> <span data-ttu-id=\"948eb-122\">此類型會儲存元素的序列。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-122\">This type stores sequences of elements.</span></span> <span data-ttu-id=\"948eb-123\">您會在角括弧之間指定元素的類型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-123\">You specify the type of the elements between the angle brackets.</span></span>\n\n<span data-ttu-id=\"948eb-124\">此 <xref:System.Collections.Generic.List%601> 類型的其中一個重要層面，在於它可以擴張或縮小，使您可以新增或移除元素。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-124\">One important aspect of this <xref:System.Collections.Generic.List%601> type is that it can grow or shrink, enabling you to add or remove elements.</span></span> <span data-ttu-id=\"948eb-125\">在您已撰寫的程式碼下方新增下列程式碼：</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-125\">Add the following code below the code you've already written:</span></span>\n\n```csharp\nConsole.WriteLine();\nnames.Add(\"Maria\");\nnames.Add(\"Bill\");\nnames.Remove(\"Ana\");\nforeach (var name in names)\n{\n  Console.WriteLine($\"Hello {name.ToUpper()}!\");\n}\n```\n\n<span data-ttu-id=\"948eb-126\">您已在清單末端新增兩個額外的名稱。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-126\">You've added two more names to the end of the list.</span></span> <span data-ttu-id=\"948eb-127\">您也移除了一個名稱。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-127\">You've also removed one as well.</span></span>\n\n<span data-ttu-id=\"948eb-128\"><xref:System.Collections.Generic.List%601> 也可讓您透過**索引**參考個別的項目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-128\">The <xref:System.Collections.Generic.List%601> enables you to reference individual items by **index** as well.</span></span> <span data-ttu-id=\"948eb-129\">您使用 `[` 和 `]` 語彙基元存取項目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-129\">You access items using the `[` and `]` tokens.</span></span> <span data-ttu-id=\"948eb-130\">在您已撰寫的程式碼下方新增下列程式碼，然後嘗試它：</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-130\">Add the following code below what you've already written and try it:</span></span>\n\n```csharp\nConsole.WriteLine($\"My name is {names[0]}.\");\nConsole.WriteLine($\"I've added {names[2]} and {names[3]} to the list.\");\n```\n\n<span data-ttu-id=\"948eb-131\">您不能存取清單結尾之後的內容。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-131\">You're not allowed to access past the end of the list.</span></span> <span data-ttu-id=\"948eb-132\">您可以使用 <xref:System.Collections.Generic.List%601.Count%2A> 屬性檢查清單的長度。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-132\">You can check how long the list is using the <xref:System.Collections.Generic.List%601.Count%2A> property.</span></span> <span data-ttu-id=\"948eb-133\">新增下列程式碼以嘗試它：</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-133\">Add the following code to try it:</span></span>\n\n```csharp\nConsole.WriteLine($\"The list has {names.Count} people in it\");\n```\n\n<span data-ttu-id=\"948eb-134\">再次按一下 [執行] 來查看結果。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-134\">Click **Run** again to see the results.</span></span> <span data-ttu-id=\"948eb-135\">在 C# 中，索引是從 0 開始，因此最大的有效索引數目為清單項目數目減去 1。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-135\">In C#, indices start at 0, so the largest valid index is one less than the number of items in the list.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"948eb-136\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-136\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"948eb-137\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-137\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"948eb-138\">針對清單進行搜尋和排序</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-138\">Search and sort lists</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"948eb-139\">我們的範例所使用的清單相對較小，但是您的應用程式可能經常會建立具有更多元素的清單，數量甚至會達數千個之多。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-139\">Our samples use relatively small lists, but your applications may often create lists with many more elements, sometimes numbering in the thousands.</span></span> <span data-ttu-id=\"948eb-140\">若要在這些較大的集合中尋找元素，您需要在清單中搜尋不同的項目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-140\">To find elements in these larger collections, you need to search the list for different items.</span></span> <span data-ttu-id=\"948eb-141\"><xref:System.Collections.Generic.List%601.IndexOf%2A> 方法會搜尋項目，並傳回該項目的索引。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-141\">The <xref:System.Collections.Generic.List%601.IndexOf%2A> method searches for an item and returns the index of the item.</span></span> <span data-ttu-id=\"948eb-142\">請嘗試以查看其運作方式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-142\">Try this to see how it works.</span></span>  <span data-ttu-id=\"948eb-143\">在您目前已撰寫的程式碼下方新增下列程式碼：</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-143\">Add the following code below what you've written so far:</span></span>\n\n```csharp\nvar index = names.IndexOf(\"Felipe\");\nif (index != -1)\n  Console.WriteLine($\"The name {names[index]} is at index {index}\");\n\nvar notFound = names.IndexOf(\"Not Found\");\n  Console.WriteLine($\"When an item is not found, IndexOf returns {notFound}\");\n```\n\n<span data-ttu-id=\"948eb-144\">您可能不清楚項目是否已位於清單中，因此您應該一律檢查由 <xref:System.Collections.Generic.List%601.IndexOf%2A> 所傳回的索引。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-144\">You may not know if an item is in the list, so you should always check the index returned by <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span></span> <span data-ttu-id=\"948eb-145\">如果它的值是 -1，便代表找不到該項目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-145\">If it is -1, the item was not found.</span></span>\n\n<span data-ttu-id=\"948eb-146\">也可以對您清單中的項目進行排序。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-146\">The items in your list can be sorted as well.</span></span> <span data-ttu-id=\"948eb-147\"><xref:System.Collections.Generic.List%601.Sort%2A> 方法會依項目的一般順序方式，對清單中的所有項目進行排序 (針對字串會依字母順序排列)。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-147\">The <xref:System.Collections.Generic.List%601.Sort%2A> method sorts all the items in the list in their normal order (alphabetically in the case of strings).</span></span> <span data-ttu-id=\"948eb-148\">新增下列程式碼，然後再次執行：</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-148\">Add this code and run again:</span></span>\n\n```csharp\nnames.Sort();\nforeach (var name in names)\n{\n  Console.WriteLine($\"Hello {name.ToUpper()}!\");\n}\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"948eb-149\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-149\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"948eb-150\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-150\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"948eb-151\">其他類型的清單</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-151\">Lists of other types</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"948eb-152\">到目前為止，您都是使用清單中的 `string` 類型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-152\">You've been using the `string` type in lists so far.</span></span> <span data-ttu-id=\"948eb-153\">讓我們使用不同的類型建立 <xref:System.Collections.Generic.List%601>。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-153\">Let's make a <xref:System.Collections.Generic.List%601> using a different type.</span></span> <span data-ttu-id=\"948eb-154\">讓我們來建置一組數字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-154\">Let's build a set of numbers.</span></span> <span data-ttu-id=\"948eb-155\">刪除您到目前為止所撰寫的程式碼，並以下列內容取代它：</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-155\">Delete the code you wrote so far, and replace it with this:</span></span>\n\n```csharp\nvar fibonacciNumbers = new List<int> {1, 1};\n```\n\n<span data-ttu-id=\"948eb-156\">這將會建立整數清單，並將前兩個整數設定為 1 的值。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-156\">That creates a list of integers, and sets the first two integers to the value 1.</span></span> <span data-ttu-id=\"948eb-157\">這是*費氏數列*的前兩個值。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-157\">These are the first two values of a *Fibonacci Sequence*, a sequence of numbers.</span></span> <span data-ttu-id=\"948eb-158\">這兩個值之後每個費式數列數字，都會是其前兩個數字的總和。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-158\">Each next Fibonacci number is found by taking the sum of the previous two numbers.</span></span> <span data-ttu-id=\"948eb-159\">新增下列程式碼：</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-159\">Add this code:</span></span>\n\n```csharp\nvar previous = fibonacciNumbers[fibonacciNumbers.Count - 1];\nvar previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];\n\nfibonacciNumbers.Add(previous + previous2);\n\nforeach(var item in fibonacciNumbers)\n    Console.WriteLine(item);\n```\n\n<span data-ttu-id=\"948eb-160\">按 [執行] 以查看結果。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-160\">Press **Run** to see the results;</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"948eb-161\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-161\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"948eb-162\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-162\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"948eb-163\">挑戰</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-163\">Challenge</span></span>"
  durationInMinutes: 10
  content: "<span data-ttu-id=\"948eb-164\">看看您是否可以結合運用來自此課程和先前課程的心得。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-164\">See if you can put together some of the lessons from this and earlier lessons.</span></span> <span data-ttu-id=\"948eb-165\">請依費式數列數字，擴展您到目前為止所建立的內容。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-165\">Expand on what you've built so far with Fibonacci Numbers.</span></span> <span data-ttu-id=\"948eb-166\">請嘗試將程式碼撰寫成可產生該數列的前 20 個數字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-166\">Try and write the code to generate the first 20 numbers in the sequence.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"948eb-167\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-167\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"948eb-168\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-168\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"948eb-169\">完成挑戰</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-169\">Complete challenge</span></span>"
  durationInMinutes: 3
  content: "<span data-ttu-id=\"948eb-170\">您是否有得到與下列程式碼類似的內容？</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-170\">Did you come up with something like this?</span></span>\n\n```csharp\nvar fibonacciNumbers = new List<int> {1, 1};\n\nwhile (fibonacciNumbers.Count < 20)\n{\n    var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];\n    var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];\n    \n    fibonacciNumbers.Add(previous + previous2);\n}\nforeach(var item in fibonacciNumbers)\n    Console.WriteLine(item);\n```\n\n<span data-ttu-id=\"948eb-171\">在迴圈每次反覆運算時，您都必須取清單中的最後兩個整數，將它們加總，並將該值新增至清單。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-171\">With each iteration of the loop, you're taking the last two integers in the list, summing them, and adding that value to the list.</span></span> <span data-ttu-id=\"948eb-172\">迴圈會持續重複，直到將 20 個項目新增至清單為止。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-172\">The loop repeats until you've added 20 items to the list.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"948eb-173\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-173\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"948eb-174\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-174\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: "<span data-ttu-id=\"948eb-175\">您已經完成清單的快速入門。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-175\">You've completed the list quick start.</span></span> <span data-ttu-id=\"948eb-176\">本快速入門是最後一個互動式的快速入門。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-176\">This quick start is the final interactive quick start.</span></span> <span data-ttu-id=\"948eb-177\">您可以在您自己的開發環境上繼續這些快速入門。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-177\">You can continue these quickstarts on your own development environment.</span></span> <span data-ttu-id=\"948eb-178\">.NET 主題[開始在 10 分鐘後](https://www.microsoft.com/net/core)已設定您的本機開發環境的指示。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-178\">The .NET topic [Get Started in 10 minutes](https://www.microsoft.com/net/core) has instructions for setting up your local development environment.</span></span> <span data-ttu-id=\"948eb-179\">完成之後，繼續進行[類別簡介](introduction-to-classes.md)本機環境中。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-179\">Once you've done that, continue with [Introduction to classes](introduction-to-classes.md) in your local environment.</span></span>\n\n<span data-ttu-id=\"948eb-180\">您可以在關於[集合](../../standard/collections/index.md)的 [.NET 指南](../../standard/index.md)主題中，深入了解 `List` 類型的使用方式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-180\">You can learn more about working with the `List` type in the [.NET Guide](../../standard/index.md) topic on [collections](../../standard/collections/index.md).</span></span> <span data-ttu-id=\"948eb-181\">您也能學習到許多其他的集合類型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"948eb-181\">You'll also learn about many other collection types.</span></span>\0"
