### YamlMime:YamlDocument
documentType: Tutorial
title: '<span data-ttu-id="9e148-101">C# 中的集合</span><span class="sxs-lookup"><span data-stu-id="9e148-101">Collections in C#</span></span>'
metadata:
  title: '<span data-ttu-id="9e148-102">C# 中的集合。</span><span class="sxs-lookup"><span data-stu-id="9e148-102">Collections in C#.</span></span> <span data-ttu-id="9e148-103">了解如何在 C# 中使用序列和集合。</span><span class="sxs-lookup"><span data-stu-id="9e148-103">Learn to use sequences and collections in C#.</span></span>'
  description: '<span data-ttu-id="9e148-104">在本教學課程中，您將使用瀏覽器以互動方式學習 C#。</span><span class="sxs-lookup"><span data-stu-id="9e148-104">In this tutorial, you''ll use your browser to learn C# interactively.</span></span> <span data-ttu-id="9e148-105">您將會撰寫 C# 程式碼，並直接在瀏覽器中查看程式碼編譯和執行的結果。</span><span class="sxs-lookup"><span data-stu-id="9e148-105">You write C# code and see the results of compiling and running your code directly in the browser.</span></span>'
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: csharp
items:
  - durationInMinutes: 1
    content: |
      <span data-ttu-id="9e148-106">本教學課程會以互動方式讓您使用瀏覽器撰寫 C#，並查看編譯及執行程式碼的結果，藉此了解 C#。</span><span class="sxs-lookup"><span data-stu-id="9e148-106">This tutorial teaches you C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id="9e148-107">它包含一系列針對建立、修改及探索集合和陣列的課程。</span><span class="sxs-lookup"><span data-stu-id="9e148-107">It contains a series of lessons that create, modify and explore collections and arrays.</span></span>
  - title: <span data-ttu-id="9e148-108">建立清單</span><span class="sxs-lookup"><span data-stu-id="9e148-108">Create lists</span></span>
    durationInMinutes: 2
    content: |
      <span data-ttu-id="9e148-109">在互動式視窗中執行下列程式碼。</span><span class="sxs-lookup"><span data-stu-id="9e148-109">Run the following code in the interactive window.</span></span> <span data-ttu-id="9e148-110">若要這樣做，請在互動式視窗中輸入下列程式碼區塊 (以您的名稱取代 "<name>")，然後按一下 [執行] 按鈕：</span><span class="sxs-lookup"><span data-stu-id="9e148-110">To do that, type the following code block in the interactive window (replace "<name>" with your name) and click the **Run** button:</span></span>

      ```csharp
      var names = new List<string> { "<name>", "Ana", "Felipe" };
      foreach (var name in names)
      {
        Console.WriteLine($"Hello {name.ToUpper()}!");
      }
      ```

      <span data-ttu-id="9e148-111">您剛才已建立字串清單，在該清單中新增三個名稱，並以全部大寫的形式列印出那些名稱。</span><span class="sxs-lookup"><span data-stu-id="9e148-111">You've just created a list of strings, added three names to that list, and printed out the names in all CAPS.</span></span> <span data-ttu-id="9e148-112">您會使用從先前的快速入門中學習到的概念，來在清單中執行迴圈。</span><span class="sxs-lookup"><span data-stu-id="9e148-112">You're using concepts that you've learned in earlier quick starts to loop through the list.</span></span>

      <span data-ttu-id="9e148-113">顯示名稱的程式碼會運用**字串插值**。</span><span class="sxs-lookup"><span data-stu-id="9e148-113">The code to display names makes use of **interpolated strings**.</span></span>  <span data-ttu-id="9e148-114">當您在 `string` 的前方放置 `$` 時，您可以在字串宣告中內嵌 C# 程式碼。</span><span class="sxs-lookup"><span data-stu-id="9e148-114">When you precede a `string` with the `$` character, you can embed C# code in the string declaration.</span></span> <span data-ttu-id="9e148-115">實際的字串會以它所產生的值取代 C# 程式碼。</span><span class="sxs-lookup"><span data-stu-id="9e148-115">The actual string replaces that C# code with the value it generates.</span></span> <span data-ttu-id="9e148-116">在此範例中，它會以每個 (轉換成大寫字母的) 名稱取代 `{name.ToUpper()}`，因為您呼叫了 <xref:System.String.ToUpper%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="9e148-116">In this example, it replaces the `{name.ToUpper()}` with each name, converted to capital letters, because you called the <xref:System.String.ToUpper%2A> method.</span></span>

      <span data-ttu-id="9e148-117">讓我們繼續探索。</span><span class="sxs-lookup"><span data-stu-id="9e148-117">Let's keep exploring.</span></span>

      > [!NOTE]
      > <span data-ttu-id="9e148-118">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class="sxs-lookup"><span data-stu-id="9e148-118">This online coding experience is in preview mode.</span></span> <span data-ttu-id="9e148-119">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \(英文\) 中回報。</span><span class="sxs-lookup"><span data-stu-id="9e148-119">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="9e148-120">修改清單內容</span><span class="sxs-lookup"><span data-stu-id="9e148-120">Modify list contents</span></span>
    durationInMinutes: 3
    content: |
      <span data-ttu-id="9e148-121">您所建立的集合會使用 <xref:System.Collections.Generic.List%601> 類型。</span><span class="sxs-lookup"><span data-stu-id="9e148-121">The collection you created uses the <xref:System.Collections.Generic.List%601> type.</span></span> <span data-ttu-id="9e148-122">此類型會儲存元素的序列。</span><span class="sxs-lookup"><span data-stu-id="9e148-122">This type stores sequences of elements.</span></span> <span data-ttu-id="9e148-123">您會在角括弧之間指定元素的類型。</span><span class="sxs-lookup"><span data-stu-id="9e148-123">You specify the type of the elements between the angle brackets.</span></span>

      <span data-ttu-id="9e148-124">此 <xref:System.Collections.Generic.List%601> 類型的其中一個重要層面，在於它可以擴張或縮小，使您可以新增或移除元素。</span><span class="sxs-lookup"><span data-stu-id="9e148-124">One important aspect of this <xref:System.Collections.Generic.List%601> type is that it can grow or shrink, enabling you to add or remove elements.</span></span> <span data-ttu-id="9e148-125">在您已撰寫的程式碼下方新增下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="9e148-125">Add the following code below the code you've already written:</span></span>

      ```csharp
      Console.WriteLine();
      names.Add("Maria");
      names.Add("Bill");
      names.Remove("Ana");
      foreach (var name in names)
      {
        Console.WriteLine($"Hello {name.ToUpper()}!");
      }
      ```

      <span data-ttu-id="9e148-126">您已在清單末端新增兩個額外的名稱。</span><span class="sxs-lookup"><span data-stu-id="9e148-126">You've added two more names to the end of the list.</span></span> <span data-ttu-id="9e148-127">您也移除了一個名稱。</span><span class="sxs-lookup"><span data-stu-id="9e148-127">You've also removed one as well.</span></span>

      <span data-ttu-id="9e148-128"><xref:System.Collections.Generic.List%601> 也可讓您透過**索引**參考個別的項目。</span><span class="sxs-lookup"><span data-stu-id="9e148-128">The <xref:System.Collections.Generic.List%601> enables you to reference individual items by **index** as well.</span></span> <span data-ttu-id="9e148-129">您使用 `[` 和 `]` 語彙基元存取項目。</span><span class="sxs-lookup"><span data-stu-id="9e148-129">You access items using the `[` and `]` tokens.</span></span> <span data-ttu-id="9e148-130">在您已撰寫的程式碼下方新增下列程式碼，然後嘗試它：</span><span class="sxs-lookup"><span data-stu-id="9e148-130">Add the following code below what you've already written and try it:</span></span>

      ```csharp
      Console.WriteLine($"My name is {names[0]}.");
      Console.WriteLine($"I've added {names[2]} and {names[3]} to the list.");
      ```

      <span data-ttu-id="9e148-131">您不能存取清單結尾之後的內容。</span><span class="sxs-lookup"><span data-stu-id="9e148-131">You're not allowed to access past the end of the list.</span></span> <span data-ttu-id="9e148-132">您可以使用 <xref:System.Collections.Generic.List%601.Count%2A> 屬性檢查清單的長度。</span><span class="sxs-lookup"><span data-stu-id="9e148-132">You can check how long the list is using the <xref:System.Collections.Generic.List%601.Count%2A> property.</span></span> <span data-ttu-id="9e148-133">新增下列程式碼以嘗試它：</span><span class="sxs-lookup"><span data-stu-id="9e148-133">Add the following code to try it:</span></span>

      ```csharp
      Console.WriteLine($"The list has {names.Count} people in it");
      ```

      <span data-ttu-id="9e148-134">再次按一下 [執行] 來查看結果。</span><span class="sxs-lookup"><span data-stu-id="9e148-134">Click **Run** again to see the results.</span></span> <span data-ttu-id="9e148-135">在 C# 中，索引是從 0 開始，因此最大的有效索引數目為清單項目數目減去 1。</span><span class="sxs-lookup"><span data-stu-id="9e148-135">In C#, indices start at 0, so the largest valid index is one less than the number of items in the list.</span></span>

      > [!NOTE]
      > <span data-ttu-id="9e148-136">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class="sxs-lookup"><span data-stu-id="9e148-136">This online coding experience is in preview mode.</span></span> <span data-ttu-id="9e148-137">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \(英文\) 中回報。</span><span class="sxs-lookup"><span data-stu-id="9e148-137">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="9e148-138">針對清單進行搜尋和排序</span><span class="sxs-lookup"><span data-stu-id="9e148-138">Search and sort lists</span></span>
    durationInMinutes: 5
    content: |
      <span data-ttu-id="9e148-139">我們的範例所使用的清單相對較小，但是您的應用程式可能經常會建立具有更多元素的清單，數量甚至會達數千個之多。</span><span class="sxs-lookup"><span data-stu-id="9e148-139">Our samples use relatively small lists, but your applications may often create lists with many more elements, sometimes numbering in the thousands.</span></span> <span data-ttu-id="9e148-140">若要在這些較大的集合中尋找元素，您需要在清單中搜尋不同的項目。</span><span class="sxs-lookup"><span data-stu-id="9e148-140">To find elements in these larger collections, you need to search the list for different items.</span></span> <span data-ttu-id="9e148-141"><xref:System.Collections.Generic.List%601.IndexOf%2A> 方法會搜尋項目，並傳回該項目的索引。</span><span class="sxs-lookup"><span data-stu-id="9e148-141">The <xref:System.Collections.Generic.List%601.IndexOf%2A> method searches for an item and returns the index of the item.</span></span> <span data-ttu-id="9e148-142">請嘗試以查看其運作方式。</span><span class="sxs-lookup"><span data-stu-id="9e148-142">Try this to see how it works.</span></span>  <span data-ttu-id="9e148-143">在您目前已撰寫的程式碼下方新增下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="9e148-143">Add the following code below what you've written so far:</span></span>

      ```csharp
      var index = names.IndexOf("Felipe");
      if (index != -1)
        Console.WriteLine($"The name {names[index]} is at index {index}");

      var notFound = names.IndexOf("Not Found");
        Console.WriteLine($"When an item is not found, IndexOf returns {notFound}");
      ```

      <span data-ttu-id="9e148-144">您可能不清楚項目是否已位於清單中，因此您應該一律檢查由 <xref:System.Collections.Generic.List%601.IndexOf%2A> 所傳回的索引。</span><span class="sxs-lookup"><span data-stu-id="9e148-144">You may not know if an item is in the list, so you should always check the index returned by <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span></span> <span data-ttu-id="9e148-145">如果它的值是 -1，便代表找不到該項目。</span><span class="sxs-lookup"><span data-stu-id="9e148-145">If it is -1, the item was not found.</span></span>

      <span data-ttu-id="9e148-146">也可以對您清單中的項目進行排序。</span><span class="sxs-lookup"><span data-stu-id="9e148-146">The items in your list can be sorted as well.</span></span> <span data-ttu-id="9e148-147"><xref:System.Collections.Generic.List%601.Sort%2A> 方法會依項目的一般順序方式，對清單中的所有項目進行排序 (針對字串會依字母順序排列)。</span><span class="sxs-lookup"><span data-stu-id="9e148-147">The <xref:System.Collections.Generic.List%601.Sort%2A> method sorts all the items in the list in their normal order (alphabetically in the case of strings).</span></span> <span data-ttu-id="9e148-148">新增下列程式碼，然後再次執行：</span><span class="sxs-lookup"><span data-stu-id="9e148-148">Add this code and run again:</span></span>

      ```csharp
      names.Sort();
      foreach (var name in names)
      {
        Console.WriteLine($"Hello {name.ToUpper()}!");
      }
      ```

      > [!NOTE]
      > <span data-ttu-id="9e148-149">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class="sxs-lookup"><span data-stu-id="9e148-149">This online coding experience is in preview mode.</span></span> <span data-ttu-id="9e148-150">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \(英文\) 中回報。</span><span class="sxs-lookup"><span data-stu-id="9e148-150">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="9e148-151">其他類型的清單</span><span class="sxs-lookup"><span data-stu-id="9e148-151">Lists of other types</span></span>
    durationInMinutes: 5
    content: |
      <span data-ttu-id="9e148-152">到目前為止，您都是使用清單中的 `string` 類型。</span><span class="sxs-lookup"><span data-stu-id="9e148-152">You've been using the `string` type in lists so far.</span></span> <span data-ttu-id="9e148-153">讓我們使用不同的類型建立 <xref:System.Collections.Generic.List%601>。</span><span class="sxs-lookup"><span data-stu-id="9e148-153">Let's make a <xref:System.Collections.Generic.List%601> using a different type.</span></span> <span data-ttu-id="9e148-154">讓我們來建置一組數字。</span><span class="sxs-lookup"><span data-stu-id="9e148-154">Let's build a set of numbers.</span></span> <span data-ttu-id="9e148-155">刪除您到目前為止所撰寫的程式碼，並以下列內容取代它：</span><span class="sxs-lookup"><span data-stu-id="9e148-155">Delete the code you wrote so far, and replace it with this:</span></span>

      ```csharp
      var fibonacciNumbers = new List<int> {1, 1};
      ```

      <span data-ttu-id="9e148-156">這將會建立整數清單，並將前兩個整數設定為 1 的值。</span><span class="sxs-lookup"><span data-stu-id="9e148-156">That creates a list of integers, and sets the first two integers to the value 1.</span></span> <span data-ttu-id="9e148-157">這是*費氏數列*的前兩個值。</span><span class="sxs-lookup"><span data-stu-id="9e148-157">These are the first two values of a *Fibonacci Sequence*, a sequence of numbers.</span></span> <span data-ttu-id="9e148-158">這兩個值之後每個費式數列數字，都會是其前兩個數字的總和。</span><span class="sxs-lookup"><span data-stu-id="9e148-158">Each next Fibonacci number is found by taking the sum of the previous two numbers.</span></span> <span data-ttu-id="9e148-159">新增下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="9e148-159">Add this code:</span></span>

      ```csharp
      var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];
      var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];

      fibonacciNumbers.Add(previous + previous2);

      foreach(var item in fibonacciNumbers)
          Console.WriteLine(item);
      ```

      <span data-ttu-id="9e148-160">按 [執行] 以查看結果。</span><span class="sxs-lookup"><span data-stu-id="9e148-160">Press **Run** to see the results;</span></span>

      > [!NOTE]
      > <span data-ttu-id="9e148-161">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class="sxs-lookup"><span data-stu-id="9e148-161">This online coding experience is in preview mode.</span></span> <span data-ttu-id="9e148-162">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \(英文\) 中回報。</span><span class="sxs-lookup"><span data-stu-id="9e148-162">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="9e148-163">挑戰</span><span class="sxs-lookup"><span data-stu-id="9e148-163">Challenge</span></span>
    durationInMinutes: 10
    content: |
      <span data-ttu-id="9e148-164">看看您是否可以結合運用來自此課程和先前課程的心得。</span><span class="sxs-lookup"><span data-stu-id="9e148-164">See if you can put together some of the lessons from this and earlier lessons.</span></span> <span data-ttu-id="9e148-165">請依費式數列數字，擴展您到目前為止所建立的內容。</span><span class="sxs-lookup"><span data-stu-id="9e148-165">Expand on what you've built so far with Fibonacci Numbers.</span></span> <span data-ttu-id="9e148-166">請嘗試將程式碼撰寫成可產生該數列的前 20 個數字。</span><span class="sxs-lookup"><span data-stu-id="9e148-166">Try and write the code to generate the first 20 numbers in the sequence.</span></span>

      > [!NOTE]
      > <span data-ttu-id="9e148-167">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class="sxs-lookup"><span data-stu-id="9e148-167">This online coding experience is in preview mode.</span></span> <span data-ttu-id="9e148-168">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \(英文\) 中回報。</span><span class="sxs-lookup"><span data-stu-id="9e148-168">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="9e148-169">完成挑戰</span><span class="sxs-lookup"><span data-stu-id="9e148-169">Complete challenge</span></span>
    durationInMinutes: 3
    content: |
      <span data-ttu-id="9e148-170">您是否有得到與下列程式碼類似的內容？</span><span class="sxs-lookup"><span data-stu-id="9e148-170">Did you come up with something like this?</span></span>

      ```csharp
      var fibonacciNumbers = new List<int> {1, 1};

      while (fibonacciNumbers.Count < 20)
      {
          var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];
          var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];
          
          fibonacciNumbers.Add(previous + previous2);
      }
      foreach(var item in fibonacciNumbers)
          Console.WriteLine(item);
      ```

      <span data-ttu-id="9e148-171">在迴圈每次反覆運算時，您都必須取清單中的最後兩個整數，將它們加總，並將該值新增至清單。</span><span class="sxs-lookup"><span data-stu-id="9e148-171">With each iteration of the loop, you're taking the last two integers in the list, summing them, and adding that value to the list.</span></span> <span data-ttu-id="9e148-172">迴圈會持續重複，直到將 20 個項目新增至清單為止。</span><span class="sxs-lookup"><span data-stu-id="9e148-172">The loop repeats until you've added 20 items to the list.</span></span>

      > [!NOTE]
      > <span data-ttu-id="9e148-173">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class="sxs-lookup"><span data-stu-id="9e148-173">This online coding experience is in preview mode.</span></span> <span data-ttu-id="9e148-174">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \(英文\) 中回報。</span><span class="sxs-lookup"><span data-stu-id="9e148-174">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - content: |
      <span data-ttu-id="9e148-175">您已經完成清單教學課程。</span><span class="sxs-lookup"><span data-stu-id="9e148-175">You've completed the list tutorial.</span></span>

      <span data-ttu-id="9e148-176">您可以在關於[集合](../../standard/collections/index.md)的 [.NET 指南](../../standard/index.md)主題中，深入了解 `List` 類型的使用方式。</span><span class="sxs-lookup"><span data-stu-id="9e148-176">You can learn more about working with the `List` type in the [.NET Guide](../../standard/index.md) topic on [collections](../../standard/collections/index.md).</span></span> <span data-ttu-id="9e148-177">您也能學習到許多其他的集合類型。</span><span class="sxs-lookup"><span data-stu-id="9e148-177">You'll also learn about many other collection types.</span></span>