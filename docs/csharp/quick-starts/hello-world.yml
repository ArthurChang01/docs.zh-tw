### YamlMime:Tutorial
title: <span data-ttu-id="1e784-101">Hello C#</span><span class="sxs-lookup"><span data-stu-id="1e784-101">Hello C#</span></span>
metadata:
  title: Hello World 互動式教學課程 - C# 快速入門
  description: 在此快速入門中，您將使用瀏覽器以互動方式學習 C#。 您將會撰寫 C# 程式碼，並直接在瀏覽器中查看程式碼編譯和執行的結果。
  audience: Developer
  level: Beginner
  ms.topic: quickstart
  ms.date: 08/24/2018
  nextTutorialHref: numbers-in-csharp.yml
  nextTutorialTitle: <span data-ttu-id="1e784-105">C# 中的數字</span><span class="sxs-lookup"><span data-stu-id="1e784-105">Numbers in C#</span></span>
  displayType: two-column
  interactive: csharp
  ms.custom: mvc
  ms.openlocfilehash: 17264f96676b5c81c8a70a6606de698406c076fb
  ms.sourcegitcommit: 2eceb05f1a5bb261291a1f6a91c5153727ac1c19
  ms.translationtype: HT
  ms.contentlocale: zh-TW
  ms.lasthandoff: 09/04/2018
  ms.locfileid: "43508028"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="1e784-106">此快速入門會以互動方式進行 C# 教學，您可以使用瀏覽器撰寫 C#，並查看程式碼編譯及執行的結果。</span><span class="sxs-lookup"><span data-stu-id="1e784-106">This quickstart teaches you C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id="1e784-107">它包含開頭為 "Hello World" 程式的一系列課程。</span><span class="sxs-lookup"><span data-stu-id="1e784-107">It contains a series of lessons that begin with a "Hello World" program.</span></span> <span data-ttu-id="1e784-108">這些課程會教導您 C# 語言的基本概念。</span><span class="sxs-lookup"><span data-stu-id="1e784-108">These lessons teach you the fundamentals of the C# language.</span></span>
- title: <span data-ttu-id="1e784-109">執行您的第一個 C# 程式</span><span class="sxs-lookup"><span data-stu-id="1e784-109">Run your first C# program</span></span>
  durationInMinutes: 2
  content: "<span data-ttu-id=\"1e784-110\">在互動式視窗中執行下列程式碼。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"1e784-111\">若要這樣做，請在互動式視窗中輸入下列程式碼區塊，並按一下 [執行] 按鈕：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-111\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nConsole.WriteLine(\"Hello World!\");\n```\n\n<span data-ttu-id=\"1e784-112\">恭喜您！</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-112\">Congratulations!</span></span> <span data-ttu-id=\"1e784-113\">您已執行您的第一個 C# 程式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-113\">You've run your first C# program.</span></span> <span data-ttu-id=\"1e784-114\">這是一個會列印 \"Hello World!\" 訊息的簡單程式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-114\">It's a simple program that prints the message \"Hello World!\".</span></span> <span data-ttu-id=\"1e784-115\">它會使用 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 方法來列印該訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-115\">It used the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method to print that message.</span></span> <span data-ttu-id=\"1e784-116\">`Console` 是代表主控台視窗的型別。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-116\">`Console` is a type that represents the console window.</span></span> <span data-ttu-id=\"1e784-117\">`WriteLine` 是 `Console` 型別的方法，會將文字行列印至文字主控台。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-117\">`WriteLine` is a method of the `Console` type that prints a line of text to that text console.</span></span>\n\n<span data-ttu-id=\"1e784-118\">讓我們繼續探索。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-118\">Let's move on and explore more.</span></span> <span data-ttu-id=\"1e784-119\">本課程的其餘部分會探索使用 `string` 型別，它代表 C# 中的文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-119\">The rest of this lesson explores working with the `string` type, which represents text in C#.</span></span> <span data-ttu-id=\"1e784-120\">就像 `Console` 型別，`string` 型別也具有方法。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-120\">Like the `Console` type, the `string` type has methods.</span></span> <span data-ttu-id=\"1e784-121\">`string` 方法可以處理文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-121\">The `string` methods work with text.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"1e784-122\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-122\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1e784-123\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-123\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="1e784-124">宣告和使用變數</span><span class="sxs-lookup"><span data-stu-id="1e784-124">Declare and use variables</span></span>
  durationInMinutes: 3
  content: "<span data-ttu-id=\"1e784-125\">您的第一個程式會在螢幕上列印 `string` \"Hello World!\"</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-125\">Your first program printed the `string` \"Hello World!\"</span></span> <span data-ttu-id=\"1e784-126\">。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-126\">on the screen.</span></span> \n\n> [!TIP]\n> <span data-ttu-id=\"1e784-127\">在您探索 C# (或任何程式設計語言) 時，可能會在撰寫程式碼時犯錯。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-127\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"1e784-128\">**編譯器**會找出那些錯誤並回報給您。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-128\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"1e784-129\">當輸出包含錯誤訊息時，請仔細查看範例程式碼以及互動式視窗中的程式碼，看看有哪些可以修正。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-129\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"1e784-130\">該練習將有助於您了解 C# 程式碼的結構。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-130\">That exercise will help you learn the structure of C# code.</span></span> \n\n<span data-ttu-id=\"1e784-131\">您的第一個程式僅能列印一則訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-131\">Your first program is limited to printing one message.</span></span> <span data-ttu-id=\"1e784-132\">您可以使用**變數**來撰寫更有用的程式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-132\">You can write more useful programs by using **variables**.</span></span> <span data-ttu-id=\"1e784-133\">**變數**是一種符號，可以使用不同的值來執行相同的程式碼。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-133\">A **variable** is a symbol you can use to run the same code with different values.</span></span> <span data-ttu-id=\"1e784-134\">讓我們來試試看吧！</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-134\">Let's try it!</span></span> <span data-ttu-id=\"1e784-135\">使用下列程式碼取代您在互動式視窗中所撰寫的程式碼：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-135\">Replace the code you've written in the interactive window with the following code:</span></span>\n\n```csharp\nstring aFriend = \"Bill\";\nConsole.WriteLine(aFriend);\n```\n\n<span data-ttu-id=\"1e784-136\">第一行會宣告一個變數 `aFriend`，並為其指派一個值 \"Bill\"。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-136\">The first line declares a variable, `aFriend` and assigns it a value, \"Bill\".</span></span> <span data-ttu-id=\"1e784-137\">第二行會列印出名稱。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-137\">The second line prints out the name.</span></span>\n\n<span data-ttu-id=\"1e784-138\">您可以將不同的值指派給任何您宣告的變數。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-138\">You can assign different values to any variable you declare.</span></span> <span data-ttu-id=\"1e784-139\">您可以將名稱變更為您的任何一位朋友。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-139\">You can change the name to one of your friends.</span></span> <span data-ttu-id=\"1e784-140\">在互動式視窗中，在您已新增的程式碼之後加入這兩行：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-140\">Add these two lines in the interactive window following the code you've already added:</span></span>\n\n```csharp\naFriend = \"Maira\";\nConsole.WriteLine(aFriend);\n```\n\n<span data-ttu-id=\"1e784-141\">請注意，同一行程式碼會根據儲存在 `aFriend` 變數中的值，列印兩個不同的訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-141\">Notice that the same line of code prints two different messages, based on the value stored in the `aFriend` variable.</span></span>\n\n<span data-ttu-id=\"1e784-142\">您可能也注意到，最後兩個訊息中遺漏 \"Hello\" 這個字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-142\">You may have also noticed that the word \"Hello\" was missing in the last two messages.</span></span> <span data-ttu-id=\"1e784-143\">讓我們來修正。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-143\">Let's fix that now.</span></span>  <span data-ttu-id=\"1e784-144\">將列印訊息的程式碼行修改為下列內容：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-144\">Modify the lines that print the message to the following:</span></span>\n\n```csharp\nConsole.WriteLine(\"Hello \" + aFriend);\n```\n\n<span data-ttu-id=\"1e784-145\">再次按一下 [執行] 來查看結果。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-145\">Click **Run** again to see the results.</span></span>\n\n<span data-ttu-id=\"1e784-146\">隨著教學的進行，使用 `+` 建立要列印的字串便顯得繁雜。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-146\">As we progress, creating strings to print using `+` becomes cumbersome.</span></span> <span data-ttu-id=\"1e784-147\">[字串內插補點](../language-reference/tokens/interpolated.md)可讓您以更精確且可讀性更高的方式拼湊字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-147\">[String interpolation](../language-reference/tokens/interpolated.md) lets you piece together strings in a more concise and readable way.</span></span>\n\n<span data-ttu-id=\"1e784-148\">如果在字串的左引號前新增 `$`，即可接著把運算式 (如 `aFriend` 變數) 用大括弧括住在字串內。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-148\">If you add a `$` before the opening quote of the string, you can then include expressions, like the `aFriend` variable, inside the string in curly brackets.</span></span>\n\n\n```csharp\nConsole.WriteLine($\"Hello {aFriend}\");\n```\n\n<span data-ttu-id=\"1e784-149\">再次按一下 [執行] 來查看結果。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-149\">Click **Run** again to see the results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"1e784-150\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-150\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1e784-151\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-151\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="1e784-152">處理字串</span><span class="sxs-lookup"><span data-stu-id="1e784-152">Work with strings</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="1e784-153">您上次的編輯是字串處理功能的初探。</span><span class="sxs-lookup"><span data-stu-id="1e784-153">Your last edit was our first look at what you can do with strings.</span></span> <span data-ttu-id="1e784-154">讓我們來探索更多內容。</span><span class="sxs-lookup"><span data-stu-id="1e784-154">Let's explore more.</span></span>


    <span data-ttu-id="1e784-155">`+` 在 C# 中稱為運算子。</span><span class="sxs-lookup"><span data-stu-id="1e784-155">The `+` is called an operator in C#.</span></span> <span data-ttu-id="1e784-156">使用像 `firstString + secondString` 這樣的方式套用至字串時，會建立一個新的字串，其中包含第一行的文字，後面接著第二行的文字。</span><span class="sxs-lookup"><span data-stu-id="1e784-156">When applied to strings like `firstString + secondString`, a new string is created with the text from the first followed by the text from the second.</span></span> <span data-ttu-id="1e784-157">如此稱為「字串串連」。</span><span class="sxs-lookup"><span data-stu-id="1e784-157">This is referred to as *string concatenation*.</span></span> <span data-ttu-id="1e784-158">您可以結合任何數目的字串，包括字串變數。</span><span class="sxs-lookup"><span data-stu-id="1e784-158">You can combine any number of strings, including string variables.</span></span>  <span data-ttu-id="1e784-159">試試這個：</span><span class="sxs-lookup"><span data-stu-id="1e784-159">Try this:</span></span>


    ```csharp

    string firstFriend = "Maria";

    string secondFriend = "Sage";

    Console.WriteLine($"My friends are {firstFriend} and {secondFriend}");

    ```


    <span data-ttu-id="1e784-160">當您探索更多字串處理功能時，可以使用 `Length` 來找出字串長度。</span><span class="sxs-lookup"><span data-stu-id="1e784-160">As you explore more with strings, you can find the length of a string using `Length`.</span></span> <span data-ttu-id="1e784-161">`Length` 是字串的**屬性**，會傳回該字串的字元數。</span><span class="sxs-lookup"><span data-stu-id="1e784-161">`Length` is a **property** of a string and it returns the number of characters in that string.</span></span> <span data-ttu-id="1e784-162">在互動式視窗底端加入下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="1e784-162">Add the following code at the bottom of the interactive window:</span></span>


    ```csharp

    Console.WriteLine($"The name {firstFriend} has {firstFriend.Length} letters.");

    Console.WriteLine($"The name {secondFriend} has {secondFriend.Length} letters.");

    ```


    > [!TIP]

    > <span data-ttu-id="1e784-163">這是您自行探索的好時機。</span><span class="sxs-lookup"><span data-stu-id="1e784-163">This is a good time to explore on your own.</span></span> <span data-ttu-id="1e784-164">您已學到 `Console.WriteLine()` 將文字寫至螢幕。</span><span class="sxs-lookup"><span data-stu-id="1e784-164">You've learned that `Console.WriteLine()` writes text to the screen.</span></span> <span data-ttu-id="1e784-165">您已學到如何宣告變數，以及將字串串連在一起。</span><span class="sxs-lookup"><span data-stu-id="1e784-165">You've learned how to declare variables and concatenate strings together.</span></span> <span data-ttu-id="1e784-166">在互動式視窗中實驗。</span><span class="sxs-lookup"><span data-stu-id="1e784-166">Experiment in the interactive window.</span></span> <span data-ttu-id="1e784-167">自行撰寫更多訊息。</span><span class="sxs-lookup"><span data-stu-id="1e784-167">Write some more messages yourself.</span></span> <span data-ttu-id="1e784-168">使用 `+` 運算子建立字串。</span><span class="sxs-lookup"><span data-stu-id="1e784-168">Build strings using the `+` operator.</span></span>


    > [!NOTE]

    > <span data-ttu-id="1e784-169">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class="sxs-lookup"><span data-stu-id="1e784-169">This online coding experience is in preview mode.</span></span> <span data-ttu-id="1e784-170">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \(英文\) 中回報。</span><span class="sxs-lookup"><span data-stu-id="1e784-170">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="1e784-171">使用字串完成更多工作</span><span class="sxs-lookup"><span data-stu-id="1e784-171">Do more with strings</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"1e784-172\">您一直在使用 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> **方法**來列印訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-172\">You've been using a **method**, <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>, to print messages.</span></span> <span data-ttu-id=\"1e784-173\">**方法**是實作某些動作的程式碼區塊。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-173\">A **method** is a block of code that implements some action.</span></span> <span data-ttu-id=\"1e784-174\">它具有名稱，以便於您可以存取。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-174\">It has a name, so you can access it.</span></span> \n\n<span data-ttu-id=\"1e784-175\">`string` 型別具有許多有用的方法。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-175\">The `string` type has many useful methods.</span></span> <span data-ttu-id=\"1e784-176\">讓我們來探索 <xref:System.String.Trim%2A> 方法以及相關的 <xref:System.String.TrimStart%2A> 和 <xref:System.String.TrimEnd%2A> 方法。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-176\">Let's explore the <xref:System.String.Trim%2A> method, and related methods <xref:System.String.TrimStart%2A> and <xref:System.String.TrimEnd%2A>.</span></span> <span data-ttu-id=\"1e784-177\">這些方法會移除前置或尾端空格：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-177\">These methods remove leading and trailing spaces:</span></span>\n\n```csharp\nstring greeting = \"      Hello World!       \";\nConsole.WriteLine($\"[{greeting}]\");\n\nstring trimmedGreeting = greeting.TrimStart();\nConsole.WriteLine($\"[{trimmedGreeting}]\");\n\ntrimmedGreeting = greeting.TrimEnd();\nConsole.WriteLine($\"[{trimmedGreeting}]\");\n\ntrimmedGreeting = greeting.Trim();\nConsole.WriteLine($\"[{trimmedGreeting}]\");\n```\n\n<span data-ttu-id=\"1e784-178\">此範例強調了處理字串的幾個重要概念。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-178\">This sample reinforces a couple of important concepts for working with strings.</span></span> <span data-ttu-id=\"1e784-179\">操作字串的方法會傳回新字串物件，而不是就地修改。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-179\">The methods that manipulate strings return new string objects rather than making modifications in place.</span></span> <span data-ttu-id=\"1e784-180\">您可以看到，每次呼叫 `Trim` 方法時都會傳回新字串，但不會變更原始訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-180\">You can see that each call to any of the `Trim` methods returns a new string, but does not change the original message.</span></span>\n\n<span data-ttu-id=\"1e784-181\">還有其他方法可以用來處理字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-181\">There are other methods available to work with a string.</span></span> <span data-ttu-id=\"1e784-182\">例如，您在編輯器或文字處理器中應該用過搜尋和取代命令。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-182\">For example, you've probably used a search and replace command in an editor or word processor.</span></span> <span data-ttu-id=\"1e784-183\"><xref:System.String.Replace%2A> 方法會在 `string` 中執行類似的操作。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-183\">The <xref:System.String.Replace%2A> method does something similar in a `string`.</span></span> <span data-ttu-id=\"1e784-184\">它會搜尋子字串，並以不同的文字來取代。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-184\">It searches for a substring, and replaces it with different text.</span></span> <span data-ttu-id=\"1e784-185\"><xref:System.String.Replace%2A> 方法會接受兩個**參數**。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-185\">The <xref:System.String.Replace%2A> method takes two **parameters**.</span></span> <span data-ttu-id=\"1e784-186\">參數就是括號之間的字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-186\">These are the strings between the parentheses.</span></span> <span data-ttu-id=\"1e784-187\">第一個字串是要搜尋的文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-187\">The first string is the text to search for.</span></span> <span data-ttu-id=\"1e784-188\">第二個字串是用來取代的文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-188\">The second string is the text to replace it with.</span></span> <span data-ttu-id=\"1e784-189\">試試看吧。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-189\">Try it for yourself.</span></span> <span data-ttu-id=\"1e784-190\">新增下列程式碼：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-190\">Add this code:</span></span>\n\n```csharp\nstring sayHello = \"Hello World!\";\nConsole.WriteLine(sayHello);\nsayHello = sayHello.Replace(\"Hello\", \"Greetings\");\nConsole.WriteLine(sayHello);\n```\n\n<span data-ttu-id=\"1e784-191\">另外兩個有用的方法可以使字串全部大寫或全部小寫。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-191\">Two other useful methods make a string ALL CAPS or all lower case.</span></span> <span data-ttu-id=\"1e784-192\">試試下列程式碼：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-192\">Try the following code:</span></span>\n\n```csharp\nConsole.WriteLine(sayHello.ToUpper());\nConsole.WriteLine(sayHello.ToLower());\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"1e784-193\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-193\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1e784-194\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-194\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="1e784-195">搜尋字串</span><span class="sxs-lookup"><span data-stu-id="1e784-195">Search strings</span></span>
  durationInMinutes: 10
  content: "<span data-ttu-id=\"1e784-196\">搜尋和取代作業的另一部分就是在字串中尋找文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-196\">The other part of a *search and replace* operation is to find text in a string.</span></span> <span data-ttu-id=\"1e784-197\">您可以使用 <xref:System.String.Contains%2A> 方法進行搜尋。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-197\">You can use the  <xref:System.String.Contains%2A> method for searching.</span></span> <span data-ttu-id=\"1e784-198\">它會告訴您字串是否包含某個子字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-198\">It tells you if a string contains a substring inside it.</span></span> <span data-ttu-id=\"1e784-199\">請嘗試下列程式碼來探索 <xref:System.String.Contains%2A>：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-199\">Try the following code to explore <xref:System.String.Contains%2A>:</span></span>\n\n```csharp\nstring songLyrics = \"You say goodbye, and I say hello\";\nConsole.WriteLine(songLyrics.Contains(\"goodbye\"));\nConsole.WriteLine(songLyrics.Contains(\"greetings\"));\n```\n\n<span data-ttu-id=\"1e784-200\"><xref:System.String.Contains%2A> 方法會傳回一個**布林**值，告訴您是否已找到您要搜尋的字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-200\">The <xref:System.String.Contains%2A> method returns a **boolean** value which tells you if the string you were searching for was found.</span></span> <span data-ttu-id=\"1e784-201\">**布林值**會儲存 `true` 或 `false` 值。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-201\">A **boolean** stores either a `true` or a `false` value.</span></span> <span data-ttu-id=\"1e784-202\">您將在稍後的課程中深入了解**布林值**。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-202\">You'll learn more about **boolean** values in a later lesson.</span></span>\n\n<span data-ttu-id=\"1e784-203\">***挑戰***</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-203\">***Challenge***</span></span>\n\n<span data-ttu-id=\"1e784-204\">還有兩個類似的 <xref:System.String.StartsWith%2A> 和 <xref:System.String.EndsWith%2A> 方法，也可以搜尋字串中的子字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-204\">There are two similar methods, <xref:System.String.StartsWith%2A> and <xref:System.String.EndsWith%2A> that also search for sub-strings in a string.</span></span> <span data-ttu-id=\"1e784-205\">這兩個方法會在字串的開頭或結尾尋找子字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-205\">These find a substring at the beginning or the end of the string.</span></span> <span data-ttu-id=\"1e784-206\">嘗試修改先前的範例，以使用 <xref:System.String.StartsWith%2A> 和 <xref:System.String.EndsWith%2A>，而不是 <xref:System.String.Contains%2A>。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-206\">Try to modify the previous sample to use <xref:System.String.StartsWith%2A> and <xref:System.String.EndsWith%2A> instead of <xref:System.String.Contains%2A>.</span></span> <span data-ttu-id=\"1e784-207\">在字串的開頭搜尋 \"You\" 或 \"goodbye\"。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-207\">Search for \"You\" or \"goodbye\" at the beginning of a string.</span></span> <span data-ttu-id=\"1e784-208\">在字串的結尾搜尋 \"You\" 或 \"goodbye\"。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-208\">Search for \"hello\" or \"goodbye\" at the end of a string.</span></span>\n\n> [!Note]\n> <span data-ttu-id=\"1e784-209\">當您測試字串結尾的文字時，請注意標點符號。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-209\">Watch your punctuation when you test for the text at the end of the string.</span></span> <span data-ttu-id=\"1e784-210\">如果字串是以句號結尾，則檢查的字串也必須以句號結尾。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-210\">If the string ends with a period, you must check for a string that ends with a period.</span></span>\n\n<span data-ttu-id=\"1e784-211\">如果開頭為 \"You\" 且結尾為 \"hello\"，則應該會取得 `true`，如果開頭或結尾為 \"goodbye\"，則為 false。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-211\">You should get `true` for starting with \"You\" and ending with \"hello\" and false for starting with or ending with \"goodbye\".</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"1e784-212\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-212\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1e784-213\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e784-213\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="1e784-214">完成挑戰</span><span class="sxs-lookup"><span data-stu-id="1e784-214">Complete challenge</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="1e784-215">您是否有得到與下列程式碼類似的內容？</span><span class="sxs-lookup"><span data-stu-id="1e784-215">Did you come up with something like this?</span></span>


    ```csharp

    string songLyrics = "You say goodbye, and I say hello";

    Console.WriteLine(songLyrics.StartsWith("You"));

    Console.WriteLine(songLyrics.StartsWith("goodbye"));


    Console.WriteLine(songLyrics.EndsWith("hello"));

    Console.WriteLine(songLyrics.EndsWith("goodbye"));

    ```


    > [!NOTE]

    > <span data-ttu-id="1e784-216">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class="sxs-lookup"><span data-stu-id="1e784-216">This online coding experience is in preview mode.</span></span> <span data-ttu-id="1e784-217">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \(英文\) 中回報。</span><span class="sxs-lookup"><span data-stu-id="1e784-217">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: >-
    <span data-ttu-id="1e784-218">您已完成＜Hello C#＞快速入門。</span><span class="sxs-lookup"><span data-stu-id="1e784-218">You've completed the "Hello C#" quickstart.</span></span>


    <span data-ttu-id="1e784-219">有關處理 `string` 型別，您可以在 [C# 程式設計手冊](../programming-guide/index.md)的[字串](../programming-guide/strings/index.md)主題中深入了解。</span><span class="sxs-lookup"><span data-stu-id="1e784-219">You can learn more about working with the `string` type in the [C# Programming Guide](../programming-guide/index.md) topic on [strings](../programming-guide/strings/index.md).</span></span>

    <span data-ttu-id="1e784-220">[使用字串的做法提示](../how-to/index.md#working-with-strings)。</span><span class="sxs-lookup"><span data-stu-id="1e784-220">[How to tips on working with strings](../how-to/index.md#working-with-strings).</span></span>
