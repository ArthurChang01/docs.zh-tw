### YamlMime:YamlDocument
documentType: Tutorial
title: <span data-ttu-id="0eb0a-101">Hello C#</span><span class="sxs-lookup"><span data-stu-id="0eb0a-101">Hello C#</span></span>
metadata:
  title: "Hello C#。 您的第一個 C# 語言簡介。"
  description: "在此快速入門中，您將使用瀏覽器以互動方式學習 C#。 您將會撰寫 C# 程式碼，並直接在瀏覽器中查看程式碼編譯和執行的結果。"
  audience: Developer
  level: Beginner
  nextTutorialHref: numbers-in-csharp
  nextTutorialTitle: "<span data-ttu-id=\"0eb0a-106\">C# 中的數字</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-106\">Numbers in C#</span></span>"
  displayType: two-column
  interactive: csharp
  ms.custom: mvc
  ms.openlocfilehash: ce1791bd7949c89269b1051d15765f5efd273e7c
  ms.sourcegitcommit: 401c4427a3ec0d1263543033b3084039278509dc
  ms.translationtype: HT
  ms.contentlocale: zh-TW
  ms.lasthandoff: 12/07/2017
items:
- durationInMinutes: 1
  content: "<span data-ttu-id=\"0eb0a-107\">此快速入門會以互動方式進行 C# 教學，您可使用瀏覽器撰寫 C#，並查看程式碼編譯及執行的結果。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-107\">This quick start teaches you C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id=\"0eb0a-108\">它包含開頭為 \"Hello World\" 程式的一系列課程。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-108\">It contains a series of lessons that begin with a \"Hello World\" program.</span></span> <span data-ttu-id=\"0eb0a-109\">這些課程會教導您 C# 語言的基本概念。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-109\">These lessons teach you the fundamentals of the C# language.</span></span>\n"
- title: "<span data-ttu-id=\"0eb0a-110\">執行您的第一個 C# 程式</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-110\">Run your first C# program</span></span>"
  durationInMinutes: 2
  content: "<span data-ttu-id=\"0eb0a-111\">在互動式視窗中執行下列程式碼。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"0eb0a-112\">若要這樣做，請在互動式視窗中輸入下列程式碼區塊，並按一下 [執行] 按鈕：</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-112\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nConsole.WriteLine(\"Hello World!\");\n```\n\n<span data-ttu-id=\"0eb0a-113\">恭喜您！</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-113\">Congratulations!</span></span> <span data-ttu-id=\"0eb0a-114\">您已執行您的第一個 C# 程式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-114\">You've run your first C# program.</span></span> <span data-ttu-id=\"0eb0a-115\">這是一個會列印 \"Hello World!\" 訊息的簡單程式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-115\">It's a simple program that prints the message \"Hello World!\".</span></span> <span data-ttu-id=\"0eb0a-116\">它會使用 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 方法來列印該訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-116\">It used the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method to print that message.</span></span> <span data-ttu-id=\"0eb0a-117\">`Console` 是代表主控台視窗的型別。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-117\">`Console` is a type that represents the console window.</span></span> <span data-ttu-id=\"0eb0a-118\">`WriteLine` 是 `Console` 型別的方法，會將文字行列印至文字主控台。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-118\">`WriteLine` is a method of the `Console` type that prints a line of text to that text console.</span></span>\n\n<span data-ttu-id=\"0eb0a-119\">讓我們繼續探索。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-119\">Let's move on and explore more.</span></span> <span data-ttu-id=\"0eb0a-120\">本課程的其餘部分會探索使用 `string` 型別，它代表 C# 中的文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-120\">The rest of this lesson explores working with the `string` type, which represents text in C#.</span></span> <span data-ttu-id=\"0eb0a-121\">就像 `Console` 型別，`string` 型別也具有方法。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-121\">Like the `Console` type, the `string` type has methods.</span></span> <span data-ttu-id=\"0eb0a-122\">`string` 方法可以處理文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-122\">The `string` methods work with text.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"0eb0a-123\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-123\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0eb0a-124\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-124\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"0eb0a-125\">宣告和使用變數</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-125\">Declare and use variables</span></span>"
  durationInMinutes: 3
  content: "<span data-ttu-id=\"0eb0a-126\">您的第一個程式會在螢幕上列印 `string` \"Hello World!\"</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-126\">Your first program printed the `string` \"Hello World!\"</span></span> <span data-ttu-id=\"0eb0a-127\">。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-127\">on the screen.</span></span> \n\n> [!TIP]\n> <span data-ttu-id=\"0eb0a-128\">在您探索 C# (或任何程式設計語言) 時，可能會在撰寫程式碼時犯錯。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-128\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"0eb0a-129\">**編譯器**會找出那些錯誤並回報給您。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-129\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"0eb0a-130\">當輸出包含錯誤訊息時，請仔細查看範例程式碼以及互動式視窗中的程式碼，看看有哪些可以修正。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-130\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"0eb0a-131\">該練習將有助於您了解 C# 程式碼的結構。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-131\">That exercise will help you learn the structure of C# code.</span></span> \n\n<span data-ttu-id=\"0eb0a-132\">您的第一個程式僅能列印一則訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-132\">Your first program is limited to printing one message.</span></span> <span data-ttu-id=\"0eb0a-133\">您可以使用**變數**來撰寫更有用的程式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-133\">You can write more useful programs by using **variables**.</span></span> <span data-ttu-id=\"0eb0a-134\">**變數**是一種符號，可以使用不同的值來執行相同的程式碼。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-134\">A **variable** is a symbol you can use to run the same code with different values.</span></span> <span data-ttu-id=\"0eb0a-135\">讓我們來試試看吧！</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-135\">Let's try it!</span></span> <span data-ttu-id=\"0eb0a-136\">使用下列程式碼取代您在互動式視窗中所撰寫的程式碼：</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-136\">Replace the code you've written in the interactive window with the following code:</span></span>\n\n```csharp\nstring aFriend = \"Bill\";\nConsole.WriteLine(aFriend);\n```\n\n<span data-ttu-id=\"0eb0a-137\">第一行會宣告一個變數 `aFriend`，並為其指派一個值 \"Bill\"。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-137\">The first line declares a variable, `aFriend` and assigns it a value, \"Bill\".</span></span> <span data-ttu-id=\"0eb0a-138\">第二行會列印出名稱。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-138\">The second line prints out the name.</span></span>\n\n<span data-ttu-id=\"0eb0a-139\">您可以將不同的值指派給任何您宣告的變數。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-139\">You can assign different values to any variable you declare.</span></span> <span data-ttu-id=\"0eb0a-140\">您可以將名稱變更為您的任何一位朋友。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-140\">You can change the name to one of your friends.</span></span> <span data-ttu-id=\"0eb0a-141\">在互動式視窗中，在您已新增的程式碼之後加入這兩行：</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-141\">Add these two lines in the interactive window following the code you've already added:</span></span>\n\n```csharp\naFriend = \"Maria\";\nConsole.WriteLine(aFriend);\n```\n\n<span data-ttu-id=\"0eb0a-142\">請注意，同一行程式碼會根據儲存在 `aFriend` 變數中的值，列印兩個不同的訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-142\">Notice that the same line of code prints two different messages, based on the value stored in the `aFriend` variable.</span></span>\n\n<span data-ttu-id=\"0eb0a-143\">您可能也注意到，最後兩個訊息中遺漏 \"Hello\" 這個字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-143\">You may have also noticed that the word \"Hello\" was missing in the last two messages.</span></span> <span data-ttu-id=\"0eb0a-144\">讓我們來修正。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-144\">Let's fix that now.</span></span>  <span data-ttu-id=\"0eb0a-145\">將列印訊息的程式碼行修改為下列內容：</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-145\">Modify the lines that print the message to the following:</span></span>\n\n```csharp\nConsole.WriteLine(\"Hello \" + aFriend);\n```\n\n<span data-ttu-id=\"0eb0a-146\">再次按一下 [執行] 來查看結果。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-146\">Click **Run** again to see the results.</span></span>\n\n<span data-ttu-id=\"0eb0a-147\">隨著教學的進行，使用 `+` 建立要列印的字串便顯得繁雜。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-147\">As we progress, creating strings to print using `+` becomes cumbersome.</span></span> <span data-ttu-id=\"0eb0a-148\">字串插補可讓您以更精確且可讀性更高的方式拼湊字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-148\">String interpolation lets you piece together strings in a more concise and readable way.</span></span>\n\n<span data-ttu-id=\"0eb0a-149\">如果在字串的左引號前新增 `$`，即可接著把字串運算式 (如 `aFriend` 變數) 用大括號括住在字串內。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-149\">If you add a `$` before the opening quotes of the string, you can then include string expressions, like the `aFriend` variable, inside the string in curly brackets.</span></span>\n\n\n```csharp\nConsole.WriteLine($\"Hello {aFriend}\");\n```\n\n<span data-ttu-id=\"0eb0a-150\">再次按一下 [執行] 來查看結果。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-150\">Click **Run** again to see the results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"0eb0a-151\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-151\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0eb0a-152\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-152\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"0eb0a-153\">處理字串</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-153\">Work with strings</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"0eb0a-154\">您上次的編輯是字串處理功能的初探。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-154\">Your last edit was our first look at what you can do with strings.</span></span> <span data-ttu-id=\"0eb0a-155\">讓我們來探索更多內容。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-155\">Let's explore more.</span></span>\n\n<span data-ttu-id=\"0eb0a-156\">`+` 在 C# 中稱為運算子。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-156\">The `+` is called an operator in C#.</span></span> <span data-ttu-id=\"0eb0a-157\">使用像 `firstString + secondString` 這樣的方式套用至字串時，會建立一個新的字串，其中包含第一行的文字，後面接著第二行的文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-157\">When applied to strings like `firstString + secondString`, a new string is created with the text from the first followed by the text from the second.</span></span> <span data-ttu-id=\"0eb0a-158\">如此稱為「字串串連」。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-158\">This is referred to as *string concatenation*.</span></span> <span data-ttu-id=\"0eb0a-159\">您可以結合任何數目的字串，包括字串變數。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-159\">You can combine any number of strings, including string variables.</span></span>  <span data-ttu-id=\"0eb0a-160\">試試這個：</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-160\">Try this:</span></span>\n\n```csharp\nstring firstFriend = \"Maria\";\nstring secondFriend = \"Sage\";\nConsole.WriteLine($\"My friends are {firstFriend} and {secondFriend}\");\n```\n\n<span data-ttu-id=\"0eb0a-161\">當您探索更多字串處理功能時，可以使用 `Length` 來找出字串長度。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-161\">As you explore more with strings, you can find the length of a string using `Length`.</span></span> <span data-ttu-id=\"0eb0a-162\">`Length` 是字串的**屬性**，會傳回該字串的字元數。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-162\">`Length` is a **property** of a string and it returns the number of characters in that string.</span></span> <span data-ttu-id=\"0eb0a-163\">在互動式視窗底端加入下列程式碼：</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-163\">Add the following code at the bottom of the interactive window:</span></span>\n\n```csharp\nConsole.WriteLine($\"The name {firstFriend} has {firstFriend.Length} letters.\");\nConsole.WriteLine($\"The name {secondFriend} has {secondFriend.Length} letters.\");\n```\n\n> [!TIP]\n> <span data-ttu-id=\"0eb0a-164\">這是您自行探索的好時機。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-164\">This is a good time to explore on your own.</span></span> <span data-ttu-id=\"0eb0a-165\">您已學到 `Console.WriteLine()` 將文字寫至螢幕。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-165\">You've learned that `Console.WriteLine()` writes text to the screen.</span></span> <span data-ttu-id=\"0eb0a-166\">您已學到如何宣告變數，以及將字串串連在一起。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-166\">You've learned how to declare variables and concatenate strings together.</span></span> <span data-ttu-id=\"0eb0a-167\">在互動式視窗中實驗。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-167\">Experiment in the interactive window.</span></span> <span data-ttu-id=\"0eb0a-168\">自行撰寫更多訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-168\">Write some more messages yourself.</span></span> <span data-ttu-id=\"0eb0a-169\">使用 `+` 運算子建立字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-169\">Build strings using the `+` operator.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"0eb0a-170\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-170\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0eb0a-171\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-171\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"0eb0a-172\">使用字串完成更多工作</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-172\">Do more with strings</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"0eb0a-173\">您一直在使用 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> **方法**來列印訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-173\">You've been using a **method**, <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>, to print messages.</span></span> <span data-ttu-id=\"0eb0a-174\">**方法**是實作某些動作的程式碼區塊。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-174\">A **method** is a block of code that implements some action.</span></span> <span data-ttu-id=\"0eb0a-175\">它具有名稱，以便於您可以存取。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-175\">It has a name, so you can access it.</span></span> \n\n<span data-ttu-id=\"0eb0a-176\">`string` 型別具有許多有用的方法。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-176\">The `string` type has many useful methods.</span></span> <span data-ttu-id=\"0eb0a-177\">讓我們來探索 <xref:System.String.Trim%2A> 方法以及相關的 <xref:System.String.TrimStart%2A> 和 <xref:System.String.TrimEnd%2A> 方法。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-177\">Let's explore the <xref:System.String.Trim%2A> method, and related methods <xref:System.String.TrimStart%2A> and <xref:System.String.TrimEnd%2A>.</span></span> <span data-ttu-id=\"0eb0a-178\">這些方法會移除前置或尾端空格：</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-178\">These methods remove leading and trailing spaces:</span></span>\n\n```csharp\nstring message = \"      Hello World!       \";\nConsole.WriteLine($\"[{message}]\");\n\nstring trimmedMessage = message.TrimStart();\nConsole.WriteLine($\"[{trimmedMessage}]\");\n\ntrimmedMessage = message.TrimEnd();\nConsole.WriteLine($\"[{trimmedMessage}]\");\n\ntrimmedMessage = message.Trim();\nConsole.WriteLine($\"[{trimmedMessage}]\");\n```\n\n<span data-ttu-id=\"0eb0a-179\">此範例強調了處理字串的幾個重要概念。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-179\">This sample reinforces a couple of important concepts for working with strings.</span></span> <span data-ttu-id=\"0eb0a-180\">操作字串的方法會傳回新字串物件，而不是就地修改。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-180\">The methods that manipulate strings return new string objects rather than making modifications in place.</span></span> <span data-ttu-id=\"0eb0a-181\">您可以看到，每次呼叫 `Trim` 方法時都會傳回新字串，但不會變更原始訊息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-181\">You can see that each call to any of the `Trim` methods returns a new string, but does not change the original message.</span></span>\n\n<span data-ttu-id=\"0eb0a-182\">還有其他方法可以用來處理字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-182\">There are other methods available to work with a string.</span></span> <span data-ttu-id=\"0eb0a-183\">例如，您在編輯器或文字處理器中應該用過搜尋和取代命令。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-183\">For example, you've probably used a search and replace command in an editor or word processor.</span></span> <span data-ttu-id=\"0eb0a-184\"><xref:System.String.Replace%2A> 方法會在 `string` 中執行類似的操作。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-184\">The <xref:System.String.Replace%2A> method does something similar in a `string`.</span></span> <span data-ttu-id=\"0eb0a-185\">它會搜尋子字串，並以不同的文字來取代。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-185\">It searches for a substring, and replaces it with different text.</span></span> <span data-ttu-id=\"0eb0a-186\"><xref:System.String.Replace%2A> 方法會接受兩個**參數**。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-186\">The <xref:System.String.Replace%2A> method takes two **parameters**.</span></span> <span data-ttu-id=\"0eb0a-187\">參數就是括號之間的字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-187\">These are the strings between the parentheses.</span></span> <span data-ttu-id=\"0eb0a-188\">第一個字串是要搜尋的文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-188\">The first string is the text to search for.</span></span> <span data-ttu-id=\"0eb0a-189\">第二個字串是用來取代的文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-189\">The second string is the text to replace it with.</span></span> <span data-ttu-id=\"0eb0a-190\">試試看吧。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-190\">Try it for yourself.</span></span> <span data-ttu-id=\"0eb0a-191\">新增下列程式碼：</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-191\">Add this code:</span></span>\n\n```csharp\nstring message = \"Hello World!\";\nConsole.WriteLine(message);\nmessage = message.Replace(\"Hello\", \"Greetings\");\nConsole.WriteLine(message);\n```\n\n<span data-ttu-id=\"0eb0a-192\">另外兩個有用的方法可以使字串全部大寫或全部小寫。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-192\">Two other useful methods make a string ALL CAPS or all lower case.</span></span> <span data-ttu-id=\"0eb0a-193\">試試下列程式碼：</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-193\">Try the following code:</span></span>\n\n```csharp\nstring message = \"Hello World!\";\nConsole.WriteLine(message);\nConsole.WriteLine(message.ToUpper());\nConsole.WriteLine(message.ToLower());\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"0eb0a-194\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-194\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0eb0a-195\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-195\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"0eb0a-196\">搜尋字串</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-196\">Search strings</span></span>"
  durationInMinutes: 10
  content: "<span data-ttu-id=\"0eb0a-197\">搜尋和取代作業的另一部分就是在字串中尋找文字。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-197\">The other part of a *search and replace* operation is to find text in a string.</span></span> <span data-ttu-id=\"0eb0a-198\">您可以使用 <xref:System.String.Contains%2A> 方法進行搜尋。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-198\">You can use the  <xref:System.String.Contains%2A> method for searching.</span></span> <span data-ttu-id=\"0eb0a-199\">它會告訴您字串是否包含某個子字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-199\">It tells you if a string contains a substring inside it.</span></span> <span data-ttu-id=\"0eb0a-200\">請嘗試下列程式碼來探索 <xref:System.String.Contains%2A>：</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-200\">Try the following code to explore <xref:System.String.Contains%2A>:</span></span>\n\n```csharp\nstring message = \"You say goodbye, and I say hello\";\nConsole.WriteLine(message.Contains(\"goodbye\"));\nConsole.WriteLine(message.Contains(\"greetings\"));\n```\n\n<span data-ttu-id=\"0eb0a-201\"><xref:System.String.Contains%2A> 方法會傳回一個**布林**值，告訴您是否已找到您要搜尋的字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-201\">The <xref:System.String.Contains%2A> method returns a **boolean** value which tells you if the string you were searching for was found.</span></span> <span data-ttu-id=\"0eb0a-202\">**布林值**會儲存 `true` 或 `false` 值。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-202\">A **boolean** stores either a `true` or a `false` value.</span></span> <span data-ttu-id=\"0eb0a-203\">您將在稍後的課程中深入了解**布林值**。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-203\">You'll learn more about **boolean** values in a later lesson.</span></span>\n\n<span data-ttu-id=\"0eb0a-204\">***挑戰***</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-204\">***Challenge***</span></span>\n\n<span data-ttu-id=\"0eb0a-205\">還有兩個類似的 <xref:System.String.StartsWith%2A> 和 <xref:System.String.EndsWith%2A> 方法，也可以搜尋字串中的子字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-205\">There are two similar methods, <xref:System.String.StartsWith%2A> and <xref:System.String.EndsWith%2A> that also search for sub-strings in a string.</span></span> <span data-ttu-id=\"0eb0a-206\">這兩個方法會在字串的開頭或結尾尋找子字串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-206\">These find a substring at the beginning or the end of the string.</span></span> <span data-ttu-id=\"0eb0a-207\">嘗試修改先前的範例，以使用 <xref:System.String.StartsWith%2A> 和 <xref:System.String.EndsWith%2A>，而不是 <xref:System.String.Contains%2A>。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-207\">Try to modify the previous sample to use <xref:System.String.StartsWith%2A> and <xref:System.String.EndsWith%2A> instead of <xref:System.String.Contains%2A>.</span></span> <span data-ttu-id=\"0eb0a-208\">在字串的開頭搜尋 \"You\" 或 \"goodbye\"。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-208\">Search for \"You\" or \"goodbye\" at the beginning of a string.</span></span> <span data-ttu-id=\"0eb0a-209\">在字串的結尾搜尋 \"You\" 或 \"goodbye\"。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-209\">Search for \"hello\" or \"goodbye\" at the end of a string.</span></span>\n\n> [!Note]\n> <span data-ttu-id=\"0eb0a-210\">當您測試字串結尾的文字時，請注意標點符號。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-210\">Watch your punctuation when you test for the text at the end of the string.</span></span> <span data-ttu-id=\"0eb0a-211\">如果字串是以句號結尾，則檢查的字串也必須以句號結尾。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-211\">If the string ends with a period, you must check for a string that ends with a period.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"0eb0a-212\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-212\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0eb0a-213\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-213\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"0eb0a-214\">完成挑戰</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-214\">Complete challenge</span></span>"
  durationInMinutes: 3
  content: "<span data-ttu-id=\"0eb0a-215\">您是否有得到與下列程式碼類似的內容？</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-215\">Did you come up with something like this?</span></span>\n\n```csharp\nstring message = \"You say goodbye, and I say hello\";\nConsole.WriteLine(message.StartsWith(\"You\"));\nConsole.WriteLine(message.StartsWith(\"goodbye\"));\n\nConsole.WriteLine(message.EndsWith(\"hello\"));\nConsole.WriteLine(message.EndsWith(\"goodbye\"));\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"0eb0a-216\">此線上程式碼撰寫體驗仍處於預覽模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-216\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0eb0a-217\">如果您遇到問題，請在 [dotnet/try 存放庫](https://github.com/dotnet/try/issues) \\(英文\\) 中回報。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-217\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: "<span data-ttu-id=\"0eb0a-218\">您已完成 \"Hello C#\" 快速入門。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-218\">You've completed the \"Hello C#\" quick start.</span></span>\n\n<span data-ttu-id=\"0eb0a-219\">您可以在自己的開發環境中繼續進行這些快速入門。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-219\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"0eb0a-220\">.NET 主題[只要 10 分鐘立即上手](https://www.microsoft.com/net/core) \\(英文\\) 中有關於設定本機開發環境的指示。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-220\">The .NET topic [Get Started in 10 minutes](https://www.microsoft.com/net/core) has instructions for setting up your local development environment.</span></span> <span data-ttu-id=\"0eb0a-221\">完成之後，請在您的本機環境中繼續進行 [C# 中的數字](numbers-in-csharp-local.md)。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-221\">Once you've done that, continue with [Numbers in C#](numbers-in-csharp-local.md) in your local environment.</span></span>\n\n<span data-ttu-id=\"0eb0a-222\">有關處理 `string` 型別，您可以在 [C# 程式設計手冊](../programming-guide/index.md)的[字串](../programming-guide/strings/index.md)主題中深入了解。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0eb0a-222\">You can learn more about working with the `string` type in the [C# Programming Guide](../programming-guide/index.md) topic on [strings](../programming-guide/strings/index.md).</span></span>\0"
